name: 'Build and Push to ACR'
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  workflow_dispatch:

jobs:
  prepare:
    name: 'Prepare'
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.environment.outputs.env }}
    steps:
      - name: Determine Environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" =~ refs/tags/^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "env=Production" >> $GITHUB_OUTPUT
            exit 0
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            echo "env=Development" >> $GITHUB_OUTPUT
            exit 0
          elif [[ "${{ github.ref }}" =~ refs/tags/^[0-9]+\.[0-9]+\.[0-9]+-(alpha|beta|rc\.[0-9]+)$ ]]; then
            echo "env=Staging" >> $GITHUB_OUTPUT
            exit 0
          fi
          exit 1
  push_image:
    name: 'Build and Push ${{ matrix.image }} to ACR'
    runs-on: ubuntu-latest
    needs: prepare
    environment: ${{ needs.prepare.outputs.env }}
    strategy:
      matrix:
        include:
          - image: authservice
            dockerfile: src/AuthService.API/Dockerfile
          - image: bookingservice
            dockerfile: src/BookingService.API/Dockerfile
          - image: notificationservice
            dockerfile: src/NotificationService.API/Dockerfile
          - image: userservice
            dockerfile: src/UserService.API/Dockerfile
          - image: angularproject
            dockerfile: src/AngularProject/Dockerfile
            context: src/AngularProject
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ACR Login
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.ACR_URL }}/cicd/${{ matrix.image }}:${{ vars.IMAGE_TAG }}
  deploy_to_aci:
    name: 'Deploy Angular to Azure Container Instance'
    runs-on: ubuntu-latest
    needs: [prepare, push_image]
    environment: ${{ needs.prepare.outputs.env }}
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to Azure Container Instances
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az container create \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name angular-app-${{ needs.prepare.outputs.env }} \
              --image ${{ secrets.ACR_URL }}/cicd/angularproject:${{ vars.IMAGE_TAG }} \
              --dns-name-label angular-app-${{ needs.prepare.outputs.env }} \
              --ports 8011 \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }}
